apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: adservice
  namespace: online-boutique
spec:
  podSelector:
    matchLabels:
      app: adservice
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: frontend
      ports:
        - port: 9555
          protocol: TCP
  egress:
    - {}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: shippingservice
  namespace: online-boutique
spec:
  podSelector:
    matchLabels:
      app: shippingservice
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: frontend
        - podSelector:
            matchLabels:
              app: checkoutservice
      ports:
        - port: 50051
          protocol: TCP
  egress:
    - {}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: recommendationservice
  namespace: online-boutique
spec:
  podSelector:
    matchLabels:
      app: recommendationservice
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: frontend
      ports:
        - port: 8080
          protocol: TCP
  egress:
    - {}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: productcatalogservice
  namespace: online-boutique
spec:
  podSelector:
    matchLabels:
      app: productcatalogservice
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: frontend
        - podSelector:
            matchLabels:
              app: checkoutservice
        - podSelector:
            matchLabels:
              app: recommendationservice
      ports:
        - port: 3550
          protocol: TCP
  egress:
    - {}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: paymentservice
  namespace: online-boutique
spec:
  podSelector:
    matchLabels:
      app: paymentservice
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: checkoutservice
      ports:
        - port: 50051
          protocol: TCP
  egress:
    - {}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: loadgenerator
  namespace: online-boutique
  labels:
    app: loadgenerator
spec:
  podSelector:
    matchLabels:
      app: loadgenerator
  policyTypes:
    - Egress
  egress:
    - {}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: frontend
  namespace: online-boutique
spec:
  podSelector:
    matchLabels:
      app: frontend
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - {}
  egress:
    - {}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: emailservice
  namespace: online-boutique
spec:
  podSelector:
    matchLabels:
      app: emailservice
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: checkoutservice
      ports:
        - port: 8080
          protocol: TCP
  egress:
    - {}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: currencyservice
  namespace: online-boutique
spec:
  podSelector:
    matchLabels:
      app: currencyservice
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: frontend
        - podSelector:
            matchLabels:
              app: checkoutservice
      ports:
        - port: 7000
          protocol: TCP
  egress:
    - {}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: checkoutservice
  namespace: online-boutique
spec:
  podSelector:
    matchLabels:
      app: checkoutservice
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: frontend
      ports:
        - port: 5050
          protocol: TCP
  egress:
    - {}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: cartservice
  namespace: online-boutique
spec:
  podSelector:
    matchLabels:
      app: cartservice
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: frontend
        - podSelector:
            matchLabels:
              app: checkoutservice
      ports:
        - port: 7070
          protocol: TCP
  egress:
    - {}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: redis-cart
  namespace: online-boutique
spec:
  podSelector:
    matchLabels:
      app: redis-cart
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: cartservice
      ports:
        - port: 6379
          protocol: TCP
  egress:
    - {}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-google-health-checks
  namespace: online-boutique
spec:
  podSelector: {}
  policyTypes:
    - Ingress
  ingress:
    - from:
        - ipBlock:
            cidr: 130.211.0.0/22
        - ipBlock:
            cidr: 35.191.0.0/16
      ports:
        - protocol: TCP
          port: 80
        - protocol: TCP
          port: 443
        - protocol: TCP
          port: 8080
---
apiVersion: networking.istio.io/v1
kind: ServiceEntry
metadata:
  name: allow-egress-googleapis
spec:
  hosts:
    - "accounts.google.com" # Used to get token
    - "*.googleapis.com"
  ports:
    - number: 80
      protocol: HTTP
      name: http
    - number: 443
      protocol: HTTPS
      name: https
---
apiVersion: networking.istio.io/v1
kind: ServiceEntry
metadata:
  name: allow-egress-google-metadata
spec:
  hosts:
    - metadata.google.internal
  addresses:
    - 169.254.169.254 # GCE metadata server
  ports:
    - number: 80
      name: http
      protocol: HTTP
    - number: 443
      name: https
      protocol: HTTPS
